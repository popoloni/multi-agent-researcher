#!/usr/bin/env python3

"""
AI Provider Configuration Helper

This script helps users configure their AI provider (Anthropic or Ollama)
and validates the configuration.
"""

import os
import sys
from pathlib import Path

def load_env_file():
    """Load the .env file and return as dict"""
    env_path = Path('.env')
    if not env_path.exists():
        return {}
    
    env_vars = {}
    with open(env_path, 'r') as f:
        for line in f:
            line = line.strip()
            if line and not line.startswith('#') and '=' in line:
                key, value = line.split('=', 1)
                env_vars[key.strip()] = value.strip()
    return env_vars

def save_env_file(env_vars):
    """Save environment variables to .env file"""
    with open('.env', 'w') as f:
        f.write("# Multi-Agent Research System Configuration\n")
        f.write("# Generated by configure_ai_provider.py\n\n")
        
        # API Configuration
        f.write("# API Configuration\n")
        f.write(f"API_HOST={env_vars.get('API_HOST', '0.0.0.0')}\n")
        f.write(f"API_PORT={env_vars.get('API_PORT', '12000')}\n")
        f.write(f"DEBUG={env_vars.get('DEBUG', 'true')}\n\n")
        
        # AI Provider
        f.write("# AI Provider Configuration\n")
        f.write(f"AI_PROVIDER={env_vars.get('AI_PROVIDER', 'anthropic')}\n\n")
        
        # Anthropic
        f.write("# Anthropic API Configuration\n")
        f.write(f"ANTHROPIC_API_KEY={env_vars.get('ANTHROPIC_API_KEY', 'your_anthropic_api_key_here')}\n\n")
        
        # Ollama
        f.write("# Ollama Configuration\n")
        f.write(f"OLLAMA_HOST={env_vars.get('OLLAMA_HOST', 'http://localhost:11434')}\n")
        f.write(f"OLLAMA_PORT={env_vars.get('OLLAMA_PORT', '11434')}\n\n")
        
        # Models
        f.write("# Model Configuration\n")
        f.write(f"LEAD_AGENT_MODEL={env_vars.get('LEAD_AGENT_MODEL', 'claude-4-sonnet-20241120')}\n")
        f.write(f"SUBAGENT_MODEL={env_vars.get('SUBAGENT_MODEL', 'claude-4-sonnet-20241120')}\n")
        f.write(f"CITATION_MODEL={env_vars.get('CITATION_MODEL', 'claude-3-5-haiku-20241022')}\n")
        f.write(f"KENOBI_MODEL={env_vars.get('KENOBI_MODEL', 'claude-4-sonnet-20241120')}\n")
        f.write(f"DOCUMENTATION_MODEL={env_vars.get('DOCUMENTATION_MODEL', 'claude-4-sonnet-20241120')}\n\n")
        
        # Other
        f.write("# Database Configuration\n")
        f.write(f"DATABASE_URL={env_vars.get('DATABASE_URL', 'sqlite+aiosqlite:///./kenobi.db')}\n\n")
        
        f.write("# Search Configuration (optional)\n")
        f.write(f"GOOGLE_CSE_ID={env_vars.get('GOOGLE_CSE_ID', 'your_google_cse_id_here')}\n")
        f.write(f"GOOGLE_API_KEY={env_vars.get('GOOGLE_API_KEY', 'your_google_api_key_here')}\n\n")
        
        f.write("# Redis Configuration (optional)\n")
        f.write(f"REDIS_URL={env_vars.get('REDIS_URL', 'redis://localhost:6379')}\n")
        
        f.write("# Logging\n")
        f.write(f"LOG_LEVEL={env_vars.get('LOG_LEVEL', 'INFO')}\n")

def main():
    print("🤖 Multi-Agent Research System - AI Provider Configuration")
    print("=" * 60)
    
    # Load existing configuration
    env_vars = load_env_file()
    current_provider = env_vars.get('AI_PROVIDER', 'not set')
    
    print(f"Current AI Provider: {current_provider}")
    print()
    
    # Ask user for provider choice
    print("Choose your AI provider:")
    print("1. Anthropic Claude (recommended - high quality, requires API key)")
    print("2. Ollama (local models - free, requires Ollama installation)")
    print("3. Show current configuration")
    print("4. Exit")
    
    choice = input("\nEnter your choice (1-4): ").strip()
    
    if choice == "1":
        # Configure Anthropic
        print("\n🔧 Configuring Anthropic Claude...")
        print("You'll need an API key from: https://console.anthropic.com/")
        
        api_key = input("Enter your Anthropic API key (or press Enter to skip): ").strip()
        
        if api_key and api_key != "your_anthropic_api_key_here":
            env_vars['AI_PROVIDER'] = 'anthropic'
            env_vars['ANTHROPIC_API_KEY'] = api_key
            
            # Set recommended models
            env_vars['LEAD_AGENT_MODEL'] = 'claude-4-sonnet-20241120'
            env_vars['SUBAGENT_MODEL'] = 'claude-4-sonnet-20241120'
            env_vars['CITATION_MODEL'] = 'claude-3-5-haiku-20241022'
            env_vars['KENOBI_MODEL'] = 'claude-4-sonnet-20241120'
            env_vars['DOCUMENTATION_MODEL'] = 'claude-4-sonnet-20241120'
            
            save_env_file(env_vars)
            print("✅ Anthropic configuration saved!")
            print("✅ Models set to recommended Anthropic configuration")
        else:
            print("⚠️  No API key provided. Please edit .env file manually.")
            
    elif choice == "2":
        # Configure Ollama
        print("\n🔧 Configuring Ollama...")
        print("Make sure Ollama is installed: https://ollama.com/download")
        print("And pull a model: ollama pull llama3.2:1b")
        
        ollama_host = input("Enter Ollama host (default: http://localhost:11434): ").strip()
        if not ollama_host:
            ollama_host = "http://localhost:11434"
            
        env_vars['AI_PROVIDER'] = 'ollama'
        env_vars['OLLAMA_HOST'] = ollama_host
        
        # Set recommended Ollama models
        env_vars['LEAD_AGENT_MODEL'] = 'llama3.2:1b'
        env_vars['SUBAGENT_MODEL'] = 'llama3.2:1b'
        env_vars['CITATION_MODEL'] = 'llama3.2:1b'
        env_vars['KENOBI_MODEL'] = 'llama3.2:1b'
        env_vars['DOCUMENTATION_MODEL'] = 'llama3.2:1b'
        
        save_env_file(env_vars)
        print("✅ Ollama configuration saved!")
        print("✅ Models set to lightweight Ollama configuration")
        
    elif choice == "3":
        # Show current configuration
        print("\n📋 Current Configuration:")
        print("-" * 30)
        for key in ['AI_PROVIDER', 'ANTHROPIC_API_KEY', 'OLLAMA_HOST', 
                   'LEAD_AGENT_MODEL', 'SUBAGENT_MODEL', 'CITATION_MODEL']:
            value = env_vars.get(key, 'not set')
            if key == 'ANTHROPIC_API_KEY' and value != 'not set' and value != 'your_anthropic_api_key_here':
                value = f"{value[:8]}..." if len(value) > 8 else value
            print(f"{key}: {value}")
            
    elif choice == "4":
        print("👋 Goodbye!")
        return
        
    else:
        print("❌ Invalid choice. Please try again.")
        return main()
    
    print("\n🎉 Configuration complete!")
    print("\nNext steps:")
    print("1. Run the server: python run.py")
    print("2. Test the research system: python test_research_debug.py")
    print("3. Visit http://localhost:12000 for the web interface")

if __name__ == "__main__":
    main()